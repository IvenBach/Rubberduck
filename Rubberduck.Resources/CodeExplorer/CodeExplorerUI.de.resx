<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <data name="CodeExplorerDockablePresenter_ParseStarted" xml:space="preserve">
    <value>{0} (parse...)</value>
  </data>
  <data name="CodeExplorerDockablePresenter_Caption" xml:space="preserve">
    <value>Code Explorer</value>
  </data>
  <data name="ExportBeforeRemove_Caption" xml:space="preserve">
    <value>Export Bestätigen</value>
  </data>
  <data name="ExportBeforeRemove_Prompt" xml:space="preserve">
    <value>Möchten Sie '{0}' vor dem Entfernen exportieren?</value>
  </data>
  <data name="ExportError_Caption" xml:space="preserve">
    <value>Fehler beim Exportieren von '{0}'</value>
  </data>
  <data name="RemoveError_Caption" xml:space="preserve">
    <value>Fehler beim Entfernen von '{0}'</value>
  </data>
  <data name="ConfirmBeforeDelete_Caption" xml:space="preserve">
    <value>Löschen bestätigen</value>
  </data>
  <data name="ConfirmBeforeDelete_Prompt" xml:space="preserve">
    <value>{0} wird permanent gelöscht.
    
Fortfahren?</value>
  </data>
  <data name="DeleteFailed_Caption" xml:space="preserve">
    <value>Löschen fehlgeschlagen</value>
  </data>
  <data name="DeleteFailed_Message" xml:space="preserve">
    <value>Die folgenden Dateien konnten nicht gelöscht werden.
    
{0}</value>
  </data>
  <data name="SyncProject" xml:space="preserve">
    <value>Projekt synchronisieren</value>
  </data>
  <data name="UpdateFromFiles" xml:space="preserve">
    <value>Komponenten aus Dateien aktualisieren...</value>
  </data>
  <data name="ReplaceFromFiles" xml:space="preserve">
    <value>Projektinhalt durch Dateiinhalt ersetzen...</value>
  </data>
  <data name="AddPropertyPageText" xml:space="preserve">
    <value>Eigenschaftsseite (.pag)</value>
  </data>
  <data name="Add" xml:space="preserve">
    <value>Hinzufügen...</value>
  </data>
  <data name="AddClassModuleText" xml:space="preserve">
    <value>Klassenmodul (.cls)</value>
  </data>
  <data name="AddExistingFileText" xml:space="preserve">
    <value>Existierende Dateien...</value>
  </data>
  <data name="AddFormText" xml:space="preserve">
    <value>Formular (.frm)</value>
  </data>
  <data name="AddMDIFormText" xml:space="preserve">
    <value>MDI-Formular (.frm)</value>
  </data>
  <data name="AddModule" xml:space="preserve">
    <value>Modul hinzufügen</value>
  </data>
  <data name="AddStdModuleText" xml:space="preserve">
    <value>Standardmodul (.bas)</value>
  </data>
  <data name="AddTemplatesSubMenu" xml:space="preserve">
    <value>Vorlagen</value>
  </data>
  <data name="AddTestModuleText" xml:space="preserve">
    <value>Testmodul</value>
  </data>
  <data name="AddTestModuleWithStubsText" xml:space="preserve">
    <value>Testmodul mit Skelettmethoden</value>
  </data>
  <data name="AddUserControlText" xml:space="preserve">
    <value>Benutzerdefiniertes Kontrollelement (.ctl)</value>
  </data>
  <data name="AddUserDocumentText" xml:space="preserve">
    <value>Benutzerdefiniertes Dokument (.dob)</value>
  </data>
  <data name="AddVBFormText" xml:space="preserve">
    <value>Formular (.frm)</value>
  </data>
  <data name="Annotate" xml:space="preserve">
    <value>Annotation hinzufügen</value>
  </data>
  <data name="AppendHeader" xml:space="preserve">
    <value>Rubberduck: Benutzerdefinierte Deklarationen - {0}</value>
  </data>
  <data name="CollapseSubnodesToolTip" xml:space="preserve">
    <value>Knoten und alle Kindknoten einklappen</value>
  </data>
  <data name="CopyToolTip" xml:space="preserve">
    <value>In Zwischenablage kopieren</value>
  </data>
  <data name="Delete" xml:space="preserve">
    <value>Löschen</value>
  </data>
  <data name="DisplayMemberNamesText" xml:space="preserve">
    <value>Member&amp;namen anzeigen</value>
  </data>
  <data name="DisplayModeToolTip" xml:space="preserve">
    <value>Style anzeigen</value>
  </data>
  <data name="DisplaySignaturesText" xml:space="preserve">
    <value>Volle &amp;Signaturen anzeigen</value>
  </data>
  <data name="Exclude" xml:space="preserve">
    <value>Aus Projekt entfernen</value>
  </data>
  <data name="ExpandSubnodesToolTip" xml:space="preserve">
    <value>Knoten und alle Kindknoten aufklappen</value>
  </data>
  <data name="Export" xml:space="preserve">
    <value>Exportieren...</value>
  </data>
  <data name="ExportAll" xml:space="preserve">
    <value>Projekt exportieren...</value>
  </data>
  <data name="ExtractInterfaceText" xml:space="preserve">
    <value>Interface extrahieren...</value>
  </data>
  <data name="FindAllImplementationsText" xml:space="preserve">
    <value>Alle Implementierungen finden...</value>
  </data>
  <data name="FindAllReferencesText" xml:space="preserve">
    <value>Alle Referenzen finden...</value>
  </data>
  <data name="FontSizeToolTip" xml:space="preserve">
    <value>Schriftgröße</value>
  </data>
  <data name="Import" xml:space="preserve">
    <value>Importieren...</value>
  </data>
  <data name="Indent" xml:space="preserve">
    <value>Einrücken</value>
  </data>
  <data name="LibraryReferences" xml:space="preserve">
    <value>Referenzen zu Biblotheken</value>
  </data>
  <data name="MoveToFolder" xml:space="preserve">
    <value>In Ordner verschieben...</value>
  </data>
  <data name="Navigate" xml:space="preserve">
    <value>Na&amp;vigieren</value>
  </data>
  <data name="New" xml:space="preserve">
    <value>&amp;Neu</value>
  </data>
  <data name="NewToolTip" xml:space="preserve">
    <value>Füge eine Komponente zum aktiven Projekt hinzu</value>
  </data>
  <data name="Open" xml:space="preserve">
    <value>Öffnen</value>
  </data>
  <data name="OpenDesigner" xml:space="preserve">
    <value>Designer öffnen</value>
  </data>
  <data name="OpenProjectProperties" xml:space="preserve">
    <value>Projekteigenschaften öffnen</value>
  </data>
  <data name="Print" xml:space="preserve">
    <value>Drucken...</value>
  </data>
  <data name="ProjectReferences" xml:space="preserve">
    <value>Projektreferenzen</value>
  </data>
  <data name="Refresh" xml:space="preserve">
    <value>Aktualisieren</value>
  </data>
  <data name="Remove" xml:space="preserve">
    <value>Entfernen...</value>
  </data>
  <data name="Rename" xml:space="preserve">
    <value>Umbenennen...</value>
  </data>
  <data name="ResourceFileText" xml:space="preserve">
    <value>Ressourcen</value>
  </data>
  <data name="RunAllTestsText" xml:space="preserve">
    <value>Alle &amp;Tests ausführen</value>
  </data>
  <data name="SearchPlaceholder" xml:space="preserve">
    <value>Suchen...</value>
  </data>
  <data name="SetAsStartupProject" xml:space="preserve">
    <value>Als Startprojekt festlegen</value>
  </data>
  <data name="ShowDesignerToolTip" xml:space="preserve">
    <value>Designer öffnen</value>
  </data>
  <data name="ShowFoldersToolTip" xml:space="preserve">
    <value>Ordner umschalten</value>
  </data>
  <data name="ShowSignaturesToolTip" xml:space="preserve">
    <value>Wechsele Signatur</value>
  </data>
  <data name="Sort" xml:space="preserve">
    <value>Sortieren</value>
  </data>
  <data name="SortStyle_ByCodeOrder" xml:space="preserve">
    <value>Wie im Modul deklariert</value>
  </data>
  <data name="SortStyle_ByName" xml:space="preserve">
    <value>nach Name</value>
  </data>
  <data name="SortStyle_ByType" xml:space="preserve">
    <value>Nach Typ gruppieren</value>
  </data>
  <data name="SyncCodePaneToolTip" xml:space="preserve">
    <value>Mit Codefenster synchronisieren</value>
  </data>
</root>